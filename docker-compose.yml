version: '3'
services:
#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    container_name: zookeeper
#    ports:
#      - '2181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka:
#    image: 'bitnami/kafka:latest'
#    container_name: kafka
#    ports:
#      - '9092:9092'
#    environment:
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_ENABLE_KRAFT=no
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#    depends_on:
#      - zookeeper
#
#  weatherstation:
#    build: weatherstation
#    container_name: weatherstation-1
#    depends_on:
#      - kafka
#    environment:
#      - STATION_ID=1

#  weatherstation2:
#    build: weatherstation
#    container_name: weatherstation-2
#    depends_on:
#      - kafka
#    environment:
#      - STATION_ID=2

#  centralstation:
#     build: centralstation
#     container_name: centralstation
#     depends_on:
#       - kafka
#       - weatherstation
#     volumes:
#       - ./parquet_data:/usr/app/weather_monitoring/stations_parquet_log

#  raindetector:
#     build: raindetector
#     container_name: raindetector
#     depends_on:
#       - kafka
#       - weatherstation

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch
      - cluster.name=elasticsearch-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - '9200:9200'

  elasticsearchservice:
    build: elasticsearchservice
    container_name: elasticsearchservice
    depends_on:
      - elasticsearch
    volumes:
      - ./parquet_data:/app
